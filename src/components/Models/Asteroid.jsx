/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useControls } from "leva";

import { MotionPathControls } from "@react-three/drei";
import * as THREE from "three";
import { useFrame } from "@react-three/fiber";

import { gsap } from "gsap";

export function Asteroid(props) {
  const { nodes, materials } = useGLTF("/models/asteroid3.glb");

  const asteroidRef = useRef();

  const { position } = useControls("Asteroid", {
    position: {
      value: [-9, 10, -12],
      step: 0.1,
      label: "Position",
    },
  });

  useFrame((state, delta) => {
    asteroidRef.current.rotation.y += 0.01;
    asteroidRef.current.rotation.x += 0.01;

    asteroidRef.current.position.x =
      6 * Math.sin(state.clock.elapsedTime * 0.2);
    asteroidRef.current.position.y =
      Math.sin(state.clock.elapsedTime * 0.35) * 2;
    asteroidRef.current.position.z =
      8 * Math.cos(state.clock.elapsedTime * 0.2);
  });

  return (
    <>
      <group position={position} ref={asteroidRef} {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          scale={0.5}
        />
      </group>
    </>
  );
}

useGLTF.preload("/models.asteroid3.glb");
